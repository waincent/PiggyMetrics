apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
    }
}

dependencies {
    testCompile 'junit:junit:4.12'

    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-feign'
    compile 'org.springframework.cloud:spring-cloud-starter-eureka'
    compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    compile 'org.springframework.cloud:spring-cloud-netflix-hystrix-stream'
    compile 'com.google.guava:guava'

    compile 'org.springframework.security.oauth:spring-security-oauth2'

    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.0'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

docker {
    url = "unix:///var/run/docker.sock"
}

task copyJar(type: Copy) {
    dependsOn   'jar'
    from        "build/libs/${project.name}-${project.version}.jar"
    into        'build/libs'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn   copyJar
    inputDir = file('.')
    tag = "waincent/${project.name}"
}

build.dependsOn buildDockerImage
build.dependsOn copyJar